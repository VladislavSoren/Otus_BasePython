# Generated by Django 4.2.2 on 2023-06-29 17:10

from django.db import migrations


def forwards_func(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    Project = apps.get_model("shop_projects", "Project")

    db_alias = schema_editor.connection.alias
    projects_all = Project.objects.using(db_alias).all()

    # Fill "url" field by name
    for t in projects_all:
        url_for_fill = t.name.title().replace(' ', '')
        t.url = f'http://{url_for_fill}.ru'
        t.save()

    # Fill other_contributors as No other contributors
    Project.objects.update(other_contributors="No other contributors")


def reverse_func(apps, schema_editor):
    # forwards_func() creates two Country instances,
    # so reverse_func() should delete them.
    Project = apps.get_model("shop_projects", "Project")
    Project.objects.update(url=None)


class Migration(migrations.Migration):
    dependencies = [
        ("shop_projects", "0009_project_other_contributors_project_url"),
    ]

    operations = [
        migrations.RunPython(
            code=forwards_func,
            reverse_code=reverse_func,
        )
    ]

    # # another example:
    # metadata = sa.MetaData()
    # metadata.reflect(bind=op.get_bind())
    #
    # users_table = metadata.tables["blog_users"]
    # authors_table = metadata.tables["blog_authors"]
    #
    # update_stmt = (
    #     sa.update(users_table)
    #     .where(authors_table.c.user_id == users_table.c.id)
    #     .values({users_table.c.bio: authors_table.c.bio})
    # )
    # op.execute(update_stmt)
