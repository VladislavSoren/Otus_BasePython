'''
Возникла проблема добавления новых фичей в мире программирования

Код написанный на функциональном программировании не позволял этого адекватно делать, всё ломалось (эффект домино)

Зачем ООП?
Основная цель - хранить состояние (атрибуты) чего-либо и выполнять с ним какие-либо манипуляции (методы)

Основные принципы ООП:
- Инкапсуляция (сокрытие реализации чего-либо внутри нашего класса)
- Наследование
- Полиморфизм

Три уровня инкапсуляции (зарывание секретиков):
- public "get_address" (используется всеми)
- protected "_get_salary" (используется только разрабами)
- private "__get_salary" (можно использовать ТОЛЬКО в рамках этого класса, т.е. для наследников не доступен)

* Причина для изменения класса должна быть только одна, помни о SRP (Single responsibility principle)
'''


class User:
    def get_address(self):
        pass

    def get_age(self):
        pass

    # def get_salary(self, t_period):
    # def get_salary(self, start_date, end_date):
    #     pass

    def _get_salary(self, start_date, end_date):  # _ модификатор доступа protected
        pass


class AdminUser(User):
    pass


user_1 = User()
user_2 = User()
user_3 = User()